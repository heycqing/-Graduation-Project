{"version":3,"file":"static/webpack/static/development/pages/login/login.js.3daa791332762ec13d74.hot-update.js","sources":["webpack:///./pages/login/login.js"],"sourcesContent":["import React from 'react'\nimport {\n    Form, Icon, Input, Button, Checkbox\n} from 'antd';\nimport Router from 'next/router'\nimport axios from 'axios'\n\nimport 'antd/dist/antd.css'\nimport '../../static/login/login.scss'\n\nclass NormalLoginForm extends React.PureComponent {\n\n    handleSubmit = (e) => {\n        var that = this;\n\n        e.preventDefault();\n\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                console.log('Received values of form: ', values);\n                axios.get('/api/post/login/',\n                 {params: values}\n                 )\n                .then(function (res) {\n                    console.log('axios执行成功，提交完成!')\n                    console.log(res.data.code);\n                    if(res.data.code === 1){\n                        // 、判断成功，跳转页面\n                        console.log('判断成功，跳转页面');\n                        Router.replace('/')\n                    }\n\n                })\n                .catch(function (err) {\n                    console.log('发生错误！！')\n                    console.log(err);\n                });\n            }else{\n                console.log('获取值失败\\n', err)\n            }\n\n        });\n    }\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        return (\n            <Form onSubmit={this.handleSubmit} className=\"ant-form\">\n                <Form.Item>\n                    {getFieldDecorator('userName', {\n                        rules: [{ required: true, message: '请输入正确的用户名!' }],\n                    })(\n                        <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"Username\" />\n                    )}\n                </Form.Item>\n                <Form.Item>\n                    {getFieldDecorator('password', {\n                        rules: [{ required: true, message: '请输入正确的密码!' }],\n                    })(\n                        <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"Password\" />\n                    )}\n                </Form.Item>\n                <Form.Item>\n                    {getFieldDecorator('remember', {\n                        valuePropName: 'checked',\n                        initialValue: true,\n                    })(\n                        <Checkbox>Remember me</Checkbox>\n                    )}\n                    <a className=\"login-form-forgot\" href=\"\">Forgot password</a>\n                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                        Log in\n                    </Button>\n                  \n                </Form.Item>\n            </Form>\n        );\n\n\n    }\n}\nconst LoginPage = Form.create({ name: 'normal_login' })(NormalLoginForm);\n\nclass Login extends React.PureComponent{\n    render() {\n        return(\n            <>\n                <div className='loginPage-container'>\n                <LoginPage />\n                </div>\n            </>\n        )\n    }\n}\n\n\nexport default Login"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AASA;;;;AArEA;AACA;AAsEA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;AACA;AACA;AAEA;AAAA;AAKA;;;;AATA;AACA;AAYA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}